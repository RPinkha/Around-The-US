!function(){"use strict";class e{constructor(e,t,s,r,i){this._name=e.name,this._link=e.link,this._id=e._id,this.isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=i}getId(){return this._id}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._imageElement.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._trashButton.addEventListener("click",(()=>{this._handleDeleteClick(this)}))}deleteCard(){this._element.remove(),this._element=null}toggleLikeCard(e){this.isLiked=e,this.renderLikeCard()}renderLikeCard(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}generateCard(){return this._element=this._getTemplate(),this._imageElement=this._element.querySelector(".card__image"),this._likeButton=this._element.querySelector(".card__like-button"),this._trashButton=this._element.querySelector(".card__trash-button"),this._setEventListeners(),this._imageElement.setAttribute("src",this._link),this._imageElement.setAttribute("alt",this._name),this._element.querySelector(".card__title").textContent=this._name,this.renderLikeCard(),this._element}}class t{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}rendererItems=()=>{this._items.reverse().forEach((e=>{this.addItem(this._renderer(e))}))};addItem=e=>{this._container.prepend(e)}}class s{constructor(e,t){let{inputSelector:s,submitButtonSelector:r,inactiveButtonClass:i,inputErrorClass:n,errorClass:o}=t;this._formElement=e,this._inputSelector=s,this._submitButtonSelector=r,this._inactiveButtonClass=i,this._inputErrorClass=n,this._errorClass=o,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError=e=>{e.classList.add(this._inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._errorClass)};_hideInputError=e=>{e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""};_checkInputValidity=e=>{this._errorElement=this._formElement.querySelector(`#${e.id}-error`),e.validity.valid?this._hideInputError(e):this._showInputError(e)};_hasInvalidInput=e=>e.some((e=>!e.validity.valid));_toggleButtonState=e=>{this._hasInvalidInput(e)?this.disableSubmit():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))};_setEventListeners(){this._toggleButtonState(this._inputList),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList)}))}))}checkValidity(){this._inputList.forEach((e=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList)}))}enableValidation(){this._setEventListeners()}disableSubmit(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)}resetForm(){this._formElement.reset()}}class r{constructor(e){this._modalElement=document.querySelector(e)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close=()=>{this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)};_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeButton=this._modalElement.querySelector(".modal__close"),this._closeButton.addEventListener("click",this.close),this._modalElement.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class i extends r{constructor(e,t,s){let{formSelector:r,submitButtonSelector:i}=s;super(e),this._form=this._modalElement.querySelector(r),this._formSubmit=t,this._button=this._modalElement.querySelector(i),this._originalButtonText=this._button.textContent,this._inputList=Array.from(this._form.querySelectorAll(".modal__input"))}renderSaving(e){this._button.textContent=e?"Saving...":this._originalButtonText}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._formSubmit(t)})),super.setEventListeners()}}const n={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_active",formSelector:".modal__form"},o=document.querySelector(".profile"),a=o.querySelector(".profile__edit-button"),l=o.querySelector(".profile__add-button"),c=o.querySelector(".profile__photo-button"),d=document.querySelector("#modal-profile-edit"),h=(Array.from(d.querySelectorAll(".modal__input")),Array.from(document.querySelectorAll(n.formSelector))),_={};let u;const m=new class{constructor(e){let{nameSelector:t,descriptionSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._descriptionElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){const e={};return e.name=this._nameElement.textContent,e.description=this._descriptionElement.textContent,e}setUserInfo(e){this._nameElement.textContent=e.name,this._descriptionElement.textContent=e.description}setUserAvatar(e){this._avatarElement.setAttribute("src",e)}}({nameSelector:".profile__name",descriptionSelector:".profile__description",avatarSelector:".profile__photo"}),p=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error :${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}editProfile(e){let{name:t,description:s}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})})}addCard(e){let{name:t,link:s}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}deleteCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}likeCard(e,t){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}changeAvatar(e){let{link:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"739decfe-71be-4d0d-8961-a71a0f6cba52","Content-Type":"application/json"}});function E(t){return new e(t,"#card",C,k,L).generateCard()}p.getUserInfo().then((e=>{m.setUserInfo({name:e.name,description:e.about}),m.setUserAvatar(e.avatar)})).catch(console.error),p.getInitialCards().then((e=>{u=new t({items:e,renderer:E},".cards__list"),u.rendererItems()})).catch(console.error),h.forEach((e=>{const t=new s(e,n),r=e.getAttribute("name");t.enableValidation(),_[r]=t}));const v=new class extends r{constructor(e,t){let{submitButtonSelector:s}=t;super(e),this._button=this._modalElement.querySelector(s),this._originalButtonText=this._button.textContent}renderSaving(e){this._button.textContent=e?"Saving...":this._originalButtonText}setCallback(e){this._callback=e}setEventListeners(){this._button.addEventListener("click",(()=>{this._callback()})),super.setEventListeners()}}("#modal-confirm-delete",n),S=new i("#modal-change-picture",(function(e){S.renderSaving(!0),p.changeAvatar(e).then((e=>{m.setUserAvatar(e.avatar),S.close()})).catch(console.error).finally((()=>{S.renderSaving(!1)}))}),n),b=new i("#modal-profile-edit",(function(e){b.renderSaving(!0),p.editProfile(e).then((e=>{m.setUserInfo({name:e.name,description:e.about}),b.close()})).catch(console.error).finally((()=>{b.renderSaving(!1)}))}),n),g=new i("#modal-add-card",(function(e){g.renderSaving(!0),p.addCard(e).then((e=>{const t=E(e);u.addItem(t),_.addCardForm.resetForm(),_.addCardForm.disableSubmit(),g.close()})).catch(console.error).finally((()=>{g.renderSaving(!1)}))}),n),f=new class extends r{constructor(e){super(e),this._previewImage=this._modalElement.querySelector(".modal__image"),this._previewImageTitle=this._modalElement.querySelector(".modal__image-title")}open(e){let{name:t,link:s}=e;this._previewImage.setAttribute("src",s),this._previewImage.setAttribute("alt",t),this._previewImageTitle.textContent=t,super.open()}}("#image-preview-modal");function k(e){v.open(),v.setCallback((()=>{v.renderSaving(!0),p.deleteCard(e.getId()).then((()=>{e.deleteCard(),v.close()})).catch(console.error).finally((()=>{v.renderSaving(!1)}))}))}function L(e){p.likeCard(e.getId(),e.isLiked).then((t=>e.toggleLikeCard(t.isLiked))).catch(console.error)}function C(e,t){f.open({name:e,link:t})}a.addEventListener("click",(()=>{b.setInputValues(m.getUserInfo()),_.profileForm.checkValidity(),b.open()})),l.addEventListener("click",(()=>g.open())),c.addEventListener("click",(()=>S.open())),b.setEventListeners(),g.setEventListeners(),f.setEventListeners(),S.setEventListeners(),v.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,