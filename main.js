!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this.handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._imageElement.addEventListener("click",(()=>{this.handleImageClick(this._name,this._link)})),this._likeButton.addEventListener("click",(()=>{this._likeCard()})),this._trashButton.addEventListener("click",(()=>{this._deleteCard()}))}_deleteCard(){this._element.remove(),this._element=null}_likeCard(){this._likeButton.classList.toggle("card__like-button_active")}generateCard(){return this._element=this._getTemplate(),this._imageElement=this._element.querySelector(".card__image"),this._likeButton=this._element.querySelector(".card__like-button"),this._trashButton=this._element.querySelector(".card__trash-button"),this._setEventListeners(),this._imageElement.setAttribute("src",this._link),this._imageElement.setAttribute("alt",this._name),this._element.querySelector(".card__title").textContent=this._name,this._element}}class t{constructor(e,t){let{inputSelector:s,submitButtonSelector:i,inactiveButtonClass:n,inputErrorClass:r,errorClass:o}=t;this._formElement=e,this._inputSelector=s,this._submitButtonSelector=i,this._inactiveButtonClass=n,this._inputErrorClass=r,this._errorClass=o,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}_showInputError=e=>{e.classList.add(this._inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._errorClass)};_hideInputError=e=>{e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""};_checkInputValidity=e=>{this._errorElement=this._formElement.querySelector(`#${e.id}-error`),e.validity.valid?this._hideInputError(e):this._showInputError(e)};_hasInvalidInput=e=>e.some((e=>!e.validity.valid));_toggleButtonState=e=>{this._hasInvalidInput(e)?this.disableSubmit():(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))};_setEventListeners(){this._toggleButtonState(this._inputList),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList)}))}))}checkValidity(){this._inputList.forEach((e=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList)}))}enableValidation(){this._setEventListeners()}disableSubmit(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)}resetForm(){this._formElement.reset()}}class s{constructor(e){this._modalElement=document.querySelector(e)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close=()=>{this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)};_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeButton=this._modalElement.querySelector(".modal__close"),this._closeButton.addEventListener("click",this.close),this._modalElement.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class i extends s{constructor(e,t,s){let{formSelector:i}=s;super(e),this._form=this._modalElement.querySelector(i),this._formSubmit=t,this._inputList=Array.from(this._form.querySelectorAll(".modal__input"))}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._formSubmit(t)})),super.setEventListeners()}}const n={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_active",formSelector:".modal__form"},r=document.querySelector(".profile"),o=r.querySelector(".profile__edit-button"),l=r.querySelector(".profile__add-button"),a=document.querySelector("#modal-profile-edit"),c=Array.from(a.querySelectorAll(".modal__input")),m=Array.from(document.querySelectorAll(n.formSelector)),_={},u=new class{constructor(e){let{nameSelector:t,descriptionSelector:s}=e;this._nameElement=document.querySelector(t),this._descriptionElement=document.querySelector(s)}getUserInfo(){const e={};return e.name=this._nameElement.textContent,e.description=this._descriptionElement.textContent,e}setUserInfo(e){this._nameElement.textContent=e.name,this._descriptionElement.textContent=e.description}}({nameSelector:".profile__name",descriptionSelector:".profile__description"});function d(t){return new e(t,"#card",S).generateCard()}m.forEach((e=>{const s=new t(e,n),i=e.getAttribute("name");s.enableValidation(),_[i]=s}));const h=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}rendererItems=()=>{this._items.reverse().forEach((e=>{this.addItem(this._renderer(e))}))};addItem=e=>{this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Las Vegas",link:"https://www.visittheusa.com/sites/default/files/styles/16_9_1280x720/public/2023-06/7b05e031-2d80-4d0a-bbd5-9c28a7ef8d8e.jpeg?h=2ce89a5c&itok=ow9jLMty"},{name:"Mertyl Beach",link:"https://www.montereybaysuites.com/wp-content/uploads/2023/01/myrtle-beach-shoreline-1184735168.jpg"}],renderer:d},".cards__list");h.rendererItems();const p=new i("#modal-profile-edit",(function(e){u.setUserInfo(e),p.close()}),n),E=new i("#modal-add-card",(function(e){const t=d(e);h.addItem(t),_.addCardForm.resetForm(),_.addCardForm.disableSubmit(),E.close()}),n),v=new class extends s{constructor(e){super(e),this._previewImage=this._modalElement.querySelector(".modal__image"),this._previewImageTitle=this._modalElement.querySelector(".modal__image-title")}open(e){let{name:t,link:s}=e;this._previewImage.setAttribute("src",s),this._previewImage.setAttribute("alt",t),this._previewImageTitle.textContent=t,super.open()}}("#image-preview-modal");function S(e,t){v.open({name:e,link:t})}o.addEventListener("click",(()=>{!function(){const e=u.getUserInfo();c[0].value=e.name,c[1].value=e.description}(),_.profileForm.checkValidity(),p.open()})),l.addEventListener("click",(()=>E.open())),p.setEventListeners(),E.setEventListeners(),v.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,